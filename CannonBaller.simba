{*** CannonBall Smither***

FOR BEST RESULTS:
--Put Steel Bars in your main bank tab near the top left! (Should Find It From ANYWHERE, but be safe)
--I Dont beleive in people using bank pin and passwords.. So open your bank if you have a pin.
-- Edgeville Only
--You can edit the max runtime in minutes below.


Runs in Ed}

{$I Wasplib/osrs.simba}
const
  MAX_RUNTIME_MINUTES = 360; //Put Your Time Here.

 type
  ECannonBallState = enum
   (GETTING_BARS,
    HANDLING_SCREEN,
    FINDING_FURNACE,
    WAITING_FOR_MATERIALS,
    DEPOSITING,
    ITEM_CHECK
   );

     TCannonBallForm = record
    Form: TScriptForm;
    MaxRuntimeEdit: TLazEdit;
  end;

    TScript = record
      banklobby,furnacelobby: Tpoint;
      furnace,bankbooth:TRSObject;
      cannonball,mould:TRSbankItem;
    end;
procedure TScript.init;
begin
  Map.Setup([ERSChunk.EDGEVILLE]);

  self.banklobby:= [8296,36454];
  self.furnacelobby:=[8340,36434];

  self.furnace:= TRSObject.Create(@map.walker,[1,2,4],[[8344,36434]],['Smelt Furnace']);
  self.furnace.Track:= True;
  self.furnace.Finder.Colors += [$394E6C, 0.000, EColorSpace.RGB, [1.000, 1.000, 1.000]];

  self.cannonball := new TRSBankItem('Cannonball', -1);
  self.cannonball := new TRSBankItem('Ammo mould', 1);

  Antiban.Zoom.Min := 0;
  Antiban.Zoom.Max := 30;
  Antiban.Skills := [ERSSkill.SMITHING, ERSSkill.TOTAL];
end;

procedure TScript.ItemCheck;
begin
 bank.open;
 bank.withdraw('Ammo mould',True,True);
end;

procedure TScript.GetBars;
begin
  bank.open;
  bank.SetQuantity(ERSItemQuantity.ALL);
  bank.Withdraw('Steel bar',True,True);
    sleep (1200,1800);
  bank.Close;
    sleep (600,1200);
  inventory.open;
end;

procedure TScript.SmeltCB;
begin
  Map.Walker.webwalk (self.furnacelobby,0,0,false);
  self.furnace.click (true,2);
    sleepuntil ((make.isopen=True),400,5000);
  Make.Select ('Cannonballs',28,-1);
    writeln 'Sleeping For Program';
    sleepuntil ((inventory.items.count ('Steel bar')<26),300,12000);
end;

procedure TScript.WaitingForMaterials;
begin
  writeln 'waiting for cannonballs';
  SleepUntil(not Inventory.Items.Contains('Steel bar'),1000,160000);
  writeln 'cannonballs complete';
end;

procedure TScript.DepositItems;
begin
  Map.Walker.webwalk (self.banklobby,0,0,false);
  bank.open;
  bank.deposit (self.cannonball);
end;

function TScript.Getnextaction():ECannonBallState;
begin
  If not Inventory.Items.Contains('Steel bar') and Inventory.Items.Contains ('Cannonball') then
    exit (ECannonBallState.DEPOSITING);
    If Inventory.Items.Count('Steel bar')>25 then
      exit (ECannonBallState.FINDING_FURNACE);
      If inventory.items.count ('Steel bar')>=1 then
        exit (ECannonBallState.WAITING_FOR_MATERIALS);
        If make.isopen then
          exit (ECannonBallState.HANDLING_SCREEN);
          If Inventory.Items.Contains ('Ammo mould') and not Inventory.Items.Contains('Steel bar') then
            exit (ECannonBallState.GETTING_BARS);
              If not Inventory.Items.Contains ('Ammo mould') then
                exit (ECannonBallState.ITEM_CHECK);
end;

procedure TScript.Run();
var
  action: ECannonBallState;
begin
 while GetTimeRunning < (MAX_RUNTIME_MINUTES * ONE_MINUTE) do

  begin
    action := Self.GetNextAction;
    WriteLn(action);
    case action of
      ECannonBallState.ITEM_CHECK:Self.ItemCheck;
      ECannonBallState.GETTING_BARS:Self.GetBars;
      ECannonBallState.FINDING_FURNACE:Self.SmeltCB;
      ECannonBallState.WAITING_FOR_MATERIALS:self.WaitingForMaterials;
      ECannonBallState.DEPOSITING:Self.DepositItems;
    end;
  end;
 Antiban.DoAntiban();
end;

Var
script: TScript;
begin
  script.init;
  script.run;
end;                              

